openapi: 3.0.0
info:
  version: '1.0'
  title: "Assignments OpenAPI 3.0"
  description: API for managing examssexass con due sss.
  license:
    name: MIT
servers:
  - url: http://assignments-api.herokuapp.com.com/api/v1
    description: Heroku
  - url: http://localhost:3000/api/v1
    description: Localhost
paths:
  /books:
    get:
      description: >-
        Gets a detailed list of all Books.
      summary: View all books
      parameters:
        - name: title
          in: query
          description: Title (or part of it) of the books you are searching for
          schema:
            type: string
        - name: author
          in: query
          description: Author name (or part of it) of the books you are searching for
          schema:
            type: string
        - name: genre
          in: query
          description: Genre name (or part of it) of the books you are searching for
          schema:
            type: string
        - name: from_year
          in: query
          description: Year from which you want to get results
          schema:
            type: int
        - name: to_year
          in: query
          description: Year to which you want to get results
          schema:
            type: int
        - name: from_rating
          in: query
          description: Rating from which you want to get results
          schema:
            type: int
      responses:
        '200':
          description: 'Detailed collection of books'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/{isbn}:
    get:
      description: >-
        Gets information about a specific book, identified by the isbn
      summary: Get a book
      parameters:
        - in: path
          name: isbn
          schema:
            type: string
          required: true
          description: 'isbn of the book'
      responses:
        '200':
          description: 'The book description'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          $ref: '#/components/responses/error-404'
  /users:
    post:
      summary: Create a user
      description: >-
        Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
                - surname
              properties:
                email:
                  type: string
                  description: "New user's email address"
                password:
                  type: string
                  description: "New user's password"
                name: 
                  type: string
                  description: "New user's first name"
                surname:
                  type: string
                  description: "New user's family name"
                phone:
                  type: string
                  description: "New user's phone number"
      responses:
        '200':
          description: 'The user was succesfully created'
        '400':
          $ref: '#/components/responses/error-400'
components:
  schemas:
    Book:
      type: object
      properties:
        self:
          type: string
          description: 'Link to this object'
        isbn:
          type: string
          description: 'Isbn of the book'
        title:
          type: string
          description: 'Title of the book'
        author:
          type: string
          description: 'Author of the book'
        genre:
          type: string
          description: 'Genre of the book'
        year: 
          type: integer
          description: 'Year of the first release'
        rating:
          type: integer
          description: 'Rating of the book (0 - 5)'
  responses:
      error-400:
        description: Invalid request
        content:
          application/json:
            schema:
              type: object 
              properties:
                message:
                  type: string
      error-404:
        description: Not found
        content:
          application/json:
            schema:
              type: object 
              properties:
                message:
                  type: string